---
- name: Install Sonatype Nexus Repository Manager
  hosts: tag_nexus_server
  become: yes

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      
    - name: Install OpenJDK
      apt:
        name: openjdk-8-jdk   # Change this to the appropriate OpenJDK version you want
        state: present

    - name: Create Nexus user
      user:
        name: nexus
        comment: Sonatype Nexus User
        shell: /bin/bash
        create_home: yes

    - name: Download Nexus
      get_url:
        url: "https://download.sonatype.com/nexus/3/latest-unix.tar.gz"
        dest: /tmp/nexus.tar.gz

    - name: Extract Nexus
      ansible.builtin.unarchive:
        src: /tmp/nexus.tar.gz
        dest: /opt/
        remote_src: yes

    - name: Determine Nexus version
      shell: ls -d /opt/nexus-* | sort -V | tail -n 1
      register: nexus_version_output
      changed_when: false

    - name: Set Nexus version fact
      set_fact:
        nexus_version_1: "{{ nexus_version_output.stdout.split('-')[-2] }}"
        nexus_version_2: "{{ nexus_version_output.stdout.split('-')[-1] }}"

    - name: Debug Nexus version facts
      debug:
        var:
          - nexus_version_1
          - nexus_version_2

    - name: Rename Nexus directory
      command: mv /opt/nexus-{{ nexus_version_1 }}-{{ nexus_version_2 }} /opt/nexus
      when: nexus_version_1 is defined and nexus_version_2 is defined

    - name: Set ownership of /opt/nexus directory
      ansible.builtin.file:
        path: /opt/nexus
        owner: nexus
        group: nexus
        recurse: yes

    - name: Set ownership of /opt/sonatype-work directory
      ansible.builtin.file:
        path: /opt/sonatype-work
        owner: nexus
        group: nexus
        recurse: yes

    - name: Change run_as_user in nexus.rc
      ansible.builtin.replace:
        path: /opt/nexus/bin/nexus.rc
        regexp: 'run_as_user=".+"'
        replace: 'run_as_user="nexus"'

    - name: Create Nexus systemd service directory
      file:
        path: /etc/systemd/system
        state: directory

    - name: Create Nexus systemd service
      template:
        src: nexus.service.j2
        dest: /etc/systemd/system/nexus.service

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Start Nexus service
      systemd:
        name: nexus
        state: started
        enabled: yes

    - name: Get Nexus Service Status
      ansible.builtin.systemd:
        name: nexus
      register: nexus_service_status

    - name: Display Nexus Service Status
      debug:
        var: nexus_service_status

    - name: Get initialAdminPassword
      shell: cat /opt/sonatype-work/nexus3/admin.password
      register: initial_admin_password

    - name: Display initialAdminPassword
      debug:
        var: initial_admin_password.stdout
